#!/usr/bin/perl
# Copyright 2015 Alex Woroschilow (alex.woroschilow@gmail.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
use FindBin;
use lib "$FindBin::Bin/../../lib";
use ZBH::SGE;
use ZBH::Local;
use ZBH::Flensburg;

use Config::Simple;
use Log::Log4perl;

sub main {
    my $file = shift;
    my $logging = shift;

    my $server = shift;
    my $planner = shift;
    my $worker = shift;
    
    Log::Log4perl->init($logging);    
    my $logger = Log::Log4perl->get_logger("10buildvec");

    $logger->info("Server: ", $server );
    $logger->info("Planner: ", $planner );
    $logger->info("Worker: ", $worker );
    $logger->info("Logging: ", $logging );
    
    my $config = new Config::Simple($file);    
    $config->param( "settings.lastrun", time );
    $config->write($file);
    
    $logger->info("settings.lastrun: ", $config->param( "settings.lastrun"));    

    if ( ZBH::SGE::is_background_process_sge($server)
      || ZBH::SGE::is_background_process_sge($planner)
      || ZBH::SGE::is_background_process_sge($worker) ) {
	$logger->error("Already started");
	return ("wait");
    }    

    my $temp = $config->param("planner.temp");
    make_path( $temp ) if ( not ZBH::Local::is_folder_exists ( $temp ));
    
    my $output_bin = $config->param("planner.output_bin");
    make_path( $output_bin ) if ( not ZBH::Local::is_folder_exists ( $output_bin ));

    my $output_vec_6 = $config->param("planner.output_vec_6");
    make_path( $output_vec_6 ) if ( not ZBH::Local::is_folder_exists ( $output_vec_6 ));
        
    my $output_vec_6_all = $config->param("planner.output_vec_6_all");
    make_path( $output_vec_6_all ) if ( not ZBH::Local::is_folder_exists ( $output_vec_6_all ));

    my $output_vec_7 = $config->param("planner.output_vec_7");
    make_path( $output_vec_7 ) if ( not ZBH::Local::is_folder_exists ( $output_vec_7 ));

    my $output_vec_7_all = $config->param("planner.output_vec_7_all");
    make_path( $output_vec_7_all ) if ( not ZBH::Local::is_folder_exists ( $output_vec_7_all ));
    
    my $output_vec_tau = $config->param("planner.output_vec_tau");
    make_path( $output_vec_tau ) if ( not ZBH::Local::is_folder_exists ( $output_vec_tau ));

    my $output_vec_tau_all = $config->param("planner.output_vec_tau_all");
    make_path( $output_vec_tau_all ) if ( not ZBH::Local::is_folder_exists ($output_vec_tau_all));
    
    $logger->info("Start: ", $server );
    ZBH::Local::background("qsub -S /bin/bash -wd $FindBin::Bin $server $file $logging");
    while ( not ZBH::SGE::is_background_process_started_sge($server) ) {
      $logger->info("SGE process not found: ", $server );    
      sleep(1);    
    }
    $logger->info("SGE process found: ", $server );

    $logger->info("Start: ", $worker );
    ZBH::Local::background("qsub -S /bin/bash -wd $FindBin::Bin $worker $file $logging");
    
    $logger->info("Start: ", $planner );
    ZBH::Local::background("qsub -S /bin/bash -wd $FindBin::Bin $planner $file $logging");
    
    ZBH::Flensburg::info("10buildvec", "Task starter report",
      "Script: $starter started at: $date"
    );
    
    return ("wait");
}

exit( 
  not print( 
      main( 
	"$FindBin::Bin/../../etc/10buildvec.conf", 
	"$FindBin::Bin/../../etc/logging.conf",
	"$FindBin::Bin/bin/server.sh", 
	"$FindBin::Bin/bin/planner.sh", 
	"$FindBin::Bin/bin/worker.sh",
      ) 
  ) 
);
