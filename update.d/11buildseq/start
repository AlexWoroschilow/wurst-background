#!/usr/bin/perl
# Copyright 2015 Alex Woroschilow (alex.woroschilow@gmail.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
use FindBin;
use lib "$FindBin::Bin/../../lib";
use File::Path qw( make_path );

use ZBH::SGE;
use ZBH::Local;
use ZBH::Flensburg;

use Config::Simple;
use Log::Log4perl;

sub main {
  my $file = shift;
  Log::Log4perl->init(shift);

  my $config = new Config::Simple($file);
  my $logger = Log::Log4perl->get_logger("11buildseq");
  
  my $response = undef;

  my $alphabet = $config->param("11buildseq.alphabet");
  $logger->info( "11buildseq.alphabet: ", $alphabet );    
  if(not ZBH::Local::is_file_exists( $alphabet )) {
    $logger->fatal("Task starter report, can not find alphabet file: $alphabet" );
    return ("error");
  }
	
  my $vector_folder = $config->param("11buildseq.vector_folder");
  $logger->info( "11buildseq.vector_folder: ", $vector_folder );    
  
  my $vector_collection = $config->param("11buildseq.vector_collection");
  $logger->info( "11buildseq.vector_collection: ", $vector_collection );    
  
  if(not ZBH::Local::is_folder_exists( $vector_folder )) {
    $logger->fatal( "Task starter report, vector folder does not exists: $vector_folder" );
    return ("error");
  }

  # Find all vector files
  # and store it to some file
  $logger->info( "Looking for sequences: ", $vector_collection );    
  ZBH::Local::execute("find $vector_folder -name '*.vec' > $vector_collection");
  # Convert vectors to sequences
  # using some alphabet generated from Steve Hoffman
  my $convertor = "$FindBin::Bin/convertprobvec.x";
  $logger->info( "Convertor: ", $convertor );    
  if(not ZBH::Local::is_file_exists( $convertor )) {
    $logger->fatal( "Can not start task, binary file not found: $convertor" );
    return ("error");
  }
	
  $logger->info( "Converting sequences: ", $vector_collection );    
  ZBH::Local::execute("$convertor -f $vector_collection -a $alphabet");	

  my $sequence_folder = $config->param("11buildseq.sequence_folder");
  $logger->info( "11buildseq.sequence_folder: ", $sequence_folder );    
	
  my $sequence_collection = $config->param("11buildseq.sequence_collection");
  $logger->info( "11buildseq.sequence_collection: ", $sequence_collection );    
  
  # Move al sequence files to 
  # different sequence folder
  if (not ZBH::Local::is_folder_exists($sequence_folder) ) {
      make_path($sequence_folder);
      if(not ZBH::Local::is_folder_exists( $sequence_folder )) {
	$logger->fatal( "Task starter report, vector folder does not exists: $sequence_folder" );
	return ("error");
      } 	
  }	
	
  $logger->info( "Mooving sequences to: ", $sequence_folder );    
  ZBH::Local::execute("find $vector_folder -type f -iname '*.seq' -exec mv -t $sequence_folder {} \+");	
  
  $logger->info( "Write sequence list file: ", $sequence_collection );    
  ZBH::Local::execute("find $sequence_folder -name '*.seq' > $sequence_collection");	

  ZBH::Flensburg::success($logger, "11buildseq", "Task starter report",
      "Generated files: $vector_collection started at: $sequence_collection"
  );

  return ("wait");
}

exit( 
  not print(  
    main( 
      "$FindBin::Bin/../../etc/update.conf", 
      "$FindBin::Bin/../../etc/logging.conf" ,
    ) 
  ) 
);
