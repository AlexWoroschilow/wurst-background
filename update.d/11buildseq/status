#!/usr/bin/perl
# Copyright 2015 Alex Woroschilow (alex.woroschilow@gmail.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
use warnings;

use FindBin;
use lib "$FindBin::Bin/../../lib";
use ZBH::SGE;
use ZBH::Local;
use Config::Simple;
use ZBH::Flensburg;
use Log::Log4perl;

sub fatal($ $) {
  my $logger = shift;
  my $message = shift;
  
  $logger->fatal($message);
  
  my $flensburg = ZBH::Flensburg->new($logger);
  $flensburg->fatal("11buildseq", "Can not start task", $message);  
}

sub main {
    my $file = shift;
    Log::Log4perl->init(shift);

    my $config  = new Config::Simple($file);
    my $logger  = Log::Log4perl->get_logger("11buildseq");

  my $flensburg = ZBH::Flensburg->new($logger);
  $flensburg->info("test", "Just simple test", "");  


    my $alphabet = $config->param("11buildseq.alphabet");
    $logger->info( "11buildseq.alphabet: ", $alphabet );    
    if(not ZBH::Local::is_file_exists( $alphabet)) {    
      fatal($logger, "Task starter report, can not find alphabet file: $alphabet" );
      return ("error");
    }
    
    my $process= "$FindBin::Bin/start";
    if ( ZBH::Local::is_background_process($process) ) {
      $logger->error( "Already started: ", $process );
      return ("wait");
    }    

    my $vector_collection = $config->param("11buildseq.vector_collection");
    $logger->info( "11buildseq.vector_collection: ", $vector_collection );
    
    my $sequence_collection = $config->param("11buildseq.sequence_collection");
    $logger->info( "11buildseq.sequence_collection: ", $sequence_collection );
    
    if (ZBH::Local::is_file_exists( $vector_collection )
	and ZBH::Local::is_file_exists( $sequence_collection )) {
	  $logger->info( "Done");
	  return ("done");
    }

    $logger->info( "Ready");
    return ("ready");
}

exit( 
  not print(  
    main( 
      "$FindBin::Bin/../../etc/update.conf", 
      "$FindBin::Bin/../../etc/logging.conf" ,
    ) 
  ) 
);

