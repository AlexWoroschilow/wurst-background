#!/usr/bin/perl
# Copyright 2015 Alex Woroschilow (alex.woroschilow@gmail.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin/../../lib/perl";
use ZBH::SGE;
use ZBH::Local;
use ZBH::Flensburg;

use Config::Simple;
use Log::Log4perl;

sub fatal($ $) {
  my $logger = shift;
  my $message = shift;
  
  $logger->fatal($message);
  ZBH::Flensburg::fatal("60export", "Can not start task", $message);  
}

sub main {
  my $file = shift;
  Log::Log4perl->init(shift);

  my $config = new Config::Simple($file);
  my $logger = Log::Log4perl->get_logger("60export");
    
  my $source = $config->param("60export.source");
  $logger->info("60export.source", $destination);
  if(not ZBH::Local::is_folder_exists( $source )) {
    fatal($logger, "Task starter report, vector folder does not exists: $source" );
    return ("error");
  } 	    
  
  my $destination = $config->param("60export.destination");
  $logger->info("60export.destination", $destination);
  if(not ZBH::Local::is_folder_exists( $destination )) {
    fatal($logger, "Task starter report, vector folder does not exists: $destination" );
    return ("error");
  } 	    

  my $process = "$FindBin::Bin/start";
  if ( ZBH::Local::is_background_process( $process ) ) {
    $logger->error("Already started: ", $process );
    return ("wait");
  }

  if(ZBH::Local::is_folder_empty($source)
    and not ZBH::Local::is_folder_empty($destination)) {
      $logger->info("Done");
      return ("done");
  }
  
  if(ZBH::Local::is_folder_exists($source)
    and not ZBH::Local::is_folder_empty($source)) {
      $logger->info("Ready");
      return ("ready");
  }
  
  return ("wait");
}

exit( 
  not print( 
    main( 
      "$FindBin::Bin/../../etc/update.conf", 
      "$FindBin::Bin/../../etc/logging.conf" ,
    ) 
  ) 
);
